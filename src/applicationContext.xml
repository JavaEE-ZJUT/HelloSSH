<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd"
       xmlns:tx="http://www.springframework.org/schema/tx">
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/hibernatedb?serverTimezone=UTC&amp;useSSL=false"/>
        <property name="username" value="root"/>
        <property name="password" value="wykbjdy999"/>
    </bean>
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect"> org.hibernate.dialect.MySQLDialect </prop>
                <prop key="connection.autocommit">true</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.use_sql_comments">true</prop>
            </props>
        </property>
        <property name="mappingResources">
            <list>
                <value>cn/xyy/po/CustomerhellosshEntity.hbm.xml</value>
            </list>
        </property>
    </bean>
    <bean id="baseDAO" class="cn.xyy.dao.BaseHibernateDAO">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="userDAO" class="cn.xyy.dao.CustomerDAO" parent="baseDAO"/>
    <bean id="userService" class="cn.xyy.service.UserService" >
        <property name="customerDAO" ref="userDAO"/>
    </bean>

    <!-- 使用Spring的声明式事务 -->
    <!-- 1、配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!-- 2、配置事务通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="del*" propagation="REQUIRED" />
            <tx:method name="*" read-only="true" />
        </tx:attributes>
    </tx:advice>
    <!-- 3、配置事务切点，并且将事务切点和事务通知关联起来。 -->
    <aop:config>
        <aop:pointcut expression="execution(* cn.xyy.service.*.*(..))" id="txPointcut"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config>

<!--    &lt;!&ndash; 增强处理定义 &ndash;&gt;-->
<!--    <bean id="logAdvice" class="cn.xyy.advice.LoggingAdvice" />-->
    <!-- 增强处理定义 -->
    <bean id="logAdvice" class="cn.xyy.advice.LoggingAdvice2" />
    <!-- 增强处理定义 --> <bean id="logInterceptor" class="cn.xyy.advice.LoggingInterceptor" />

    <!--设定代理-->
    <bean id="logProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!--设定代理的是接口-->
        <property name="proxyInterfaces" value="cn.xyy.service.IUserService"/>
        <!--设定代理的目标类-->
        <property name="target" ref="userService" />
        <!--设定切入的Advice-->
        <property name="interceptorNames">
            <list>
                <value>logAdvice</value>
                <value>logInterceptor</value>
            </list>
        </property>
    </bean>

</beans>